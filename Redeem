----------------------------------------------------------------
----------------------------------------------------------------
-- Essential Varz and Funcs

local lib = {}
local draggingslider = {};
local tabs = {}
local togglekeybind = Enum.KeyCode.RightShift;

----------------------------------------------------------------
-- Core Funcs

local function IsUsingSliderLib()
	for i,v in pairs(draggingslider) do
		if v then
			return v;
		end
	end
	return false;
end

local function DragifyLib(MainFrame)

	local dragging
	local dragInput
	local dragStart
	local startPos

	function update(input)
		if IsUsingSliderLib() then return; end
		Delta = input.Position - dragStart
		Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + Delta.X, startPos.Y.Scale, startPos.Y.Offset + Delta.Y)
		game:GetService("TweenService"):Create(MainFrame, TweenInfo.new(.25), {Position = Position}):Play()
	end

	MainFrame.InputBegan:Connect(function(input)
		if IsUsingSliderLib() then return; end
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = MainFrame.Position

			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	MainFrame.InputChanged:Connect(function(input)
		if IsUsingSliderLib() then return; end
		if (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
			dragInput = input
		end
	end)

	game:GetService("UserInputService").InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)
end

local function ApplyFrameResizingLib(scrollingframe)
	local calc = scrollingframe:FindFirstChild("UIGridLayout") or scrollingframe:FindFirstChild("UIListLayout") or nil;
	local function update()
		pcall(function()
			local cS = calc.AbsoluteContentSize
			scrollingframe.CanvasSize = UDim2.new(0,scrollingframe.Size.X,0,cS.Y + 30)
		end)
	end
	calc.Changed:Connect(update)
	update()
end

local function addInstance(instance, properties)
	if instance and type(properties) == "table" then
		local ins = Instance.new(tostring(instance))
		for i,v in pairs(properties or {}) do
			ins[i] = v
		end
		return ins;
	else
		error("Invalid input for addInstance function.")
	end
end

----------------------------------------------------------------
-- Lib Funcs

function lib:NewLib(UIName)

    local screengui = addInstance("ScreenGui", {
        Parent = game.CoreGui
    });

    local MainFrame = addInstance("Frame", {
        Name = "MainFrame",
        BackgroundColor3 = Color3.fromRGB(40, 40, 40),
        BorderSizePixel = 0,
        Position = UDim2.new(0.52721566, 0, 0.172161177, 0),
		Size = UDim2.new(0, 390, 0, 357),
		ClipsDescendants = true,
        Parent = screengui
	});
	game:GetService("UserInputService").InputBegan:Connect(function(input)
		if input.KeyCode == togglekeybind then
			if MainFrame.Position.X.Scale > 1 or MainFrame.Position.Y.Scale > 1 then
				MainFrame:TweenPosition(UDim2.new(0.5,0,0.5,0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true)
			else
				MainFrame:TweenPosition(MainFrame.Position + UDim2.new(2, 0,0,0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 1, true)
			end
		end
	end)
	DragifyLib(MainFrame);
	addInstance("UICorner", {
		CornerRadius = UDim.new(0,5),
		Parent = MainFrame
	});


    local libname = addInstance("TextLabel", {
        Name = "LibName",
        BackgroundColor3 = Color3.fromRGB(255, 255, 255),
        BackgroundTransparency = 1.000,
        Position = UDim2.new(0.025641026, 0, 0.0252100844, 0),
        Size = UDim2.new(0, 121, 0, 53),
        Font = Enum.Font.SourceSans,
        Text = UIName,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = 20.000,
        TextXAlignment = Enum.TextXAlignment.Left,
        Parent = MainFrame
    });

    local TabFrame = addInstance("Frame", {
        Name = "TabFrame",
        BackgroundColor3 = Color3.fromRGB(40, 40, 40),
        BorderSizePixel = 0,
        Position = UDim2.new(0, 0, 0.126666665, 0),
        Size = UDim2.new(0, 115, 0, 262),
        Parent = MainFrame
	});
	addInstance("Frame", {
		BackgroundColor3 = Color3.fromRGB(40, 40, 40),
		BackgroundTransparency = 1.000,
		Size = UDim2.new(0, 191, 0, 30),
		Position = UDim2.new(0.453846157, 0, 0.0644257739, 0),
		BorderSizePixel = 0,
		Parent = MainFrame
	});

    addInstance("UIGridLayout", {
        HorizontalAlignment = Enum.HorizontalAlignment.Right,
        SortOrder = Enum.SortOrder.LayoutOrder,
        CellPadding = UDim2.new(0, 30, 0, 25),
        CellSize = UDim2.new(0, 10, 0, 25),
        Parent = TabFrame
    });

    return MainFrame;

end

function lib:NewSection(LibInstance, SectionName)
    local btn = addInstance("TextButton", {
        BackgroundColor3 = Color3.fromRGB(255, 255, 255),
		BackgroundTransparency = 1.000,
        BorderSizePixel = 0,
        Size = UDim2.new(0, 200, 0, 50),
        Font = Enum.Font.SourceSansBold,
        Text = SectionName,
        TextColor3 = Color3.fromRGB(211, 211, 211),
        TextSize = 14.000,
        Parent = LibInstance.TabFrame
	});

    local scrollingframe = addInstance("ScrollingFrame", {
        Name = "SectionFrame",
        BackgroundColor3 = Color3.fromRGB(255, 255, 255),
        BackgroundTransparency = 1.000,
        BorderSizePixel = 0,
        Visible = false;
        Position = UDim2.new(0, 0, 0.156862751, 0),
        Size = UDim2.new(0, 390, 0, 289),
        ScrollBarThickness = 9,
        Parent = LibInstance
    });

    addInstance("UIListLayout", {
        HorizontalAlignment = Enum.HorizontalAlignment.Top,
        VerticalAlignment = Enum.HorizontalAlignment.Left,
        SortOrder = Enum.SortOrder.LayoutOrder,
        Padding = UDim.new(0, 10),
        Parent = scrollingframe
    });

    ApplyFrameResizingLib(scrollingframe);
    table.insert(tabs, 1, scrollingframe)

    btn.MouseButton1Click:Connect(function()
        for i,v in pairs(tabs) do
            if v ~= scrollingframe then v.Visible = false else v.Visible = true end;
        end
    end)

    return scrollingframe;

end

function lib:SetActive(Section)
    Section.Visible = true
end

function lib:NewButton(section, value, func)
    func = func or function() end
    local button = addInstance("TextButton", {
		Text = "   "..value,
		TextSize = 14,
        BorderSizePixel = 0,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        Size = UDim2.new(0, 349, 0, 27),
		BackgroundColor3 = Color3.fromRGB(30, 30, 30),
		Font = Enum.Font.SourceSans,
        Parent = section
	});
	addInstance("UICorner", {
		CornerRadius = UDim.new(0,5),
		Parent = button
	});

    button.MouseButton1Click:Connect(func)

    return button;
end

function lib:NewCheckBox(section, value, status, func)
    local f = addInstance("TextLabel", {
        BackgroundColor3 = Color3.fromRGB(30, 30, 30),
        BorderSizePixel = 0,
        Size = UDim2.new(0, 349, 0, 27),
		Text = "   "..value,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = 14.000,
        TextWrapped = true,
		Font = Enum.Font.SourceSansBold,
        TextXAlignment = Enum.TextXAlignment.Left,
        Parent = section
	});
	addInstance("UICorner", {
		CornerRadius = UDim.new(0,5),
		Parent = f
	});
    local tl = addInstance("Frame", {
        BackgroundColor3 = Color3.fromRGB(50, 50, 50),
        Position = UDim2.new(0.894521713, 0, 0.144873977, 0),
        Size = UDim2.new(0, 30, 0, 17),
        Parent = f
    });

	addInstance("UICorner", {
		CornerRadius = UDim.new(0,8),
		Parent = tl
	});

    local toggle = addInstance("TextButton", {
        AnchorPoint = Vector2.new(0.5, 0.5),
        BackgroundColor3 = Color3.fromRGB(255, 255, 255),
        BorderSizePixel = 0,
        Position = UDim2.new(0.899999976, 0, 0.219999999, 0),
        Size = UDim2.new(0, 17, 0, 13),
        Font = Enum.Font.SourceSansBold,
        Text = "",
        TextColor3 = Color3.fromRGB(0, 0, 0),
        TextSize = 14.000,
        Parent = f
	});
	addInstance("UICorner", {
		CornerRadius = UDim.new(0,8),
		Parent = toggle
	});

    local state = status
	if state then
		toggle.BackgroundColor3 = Color3.fromRGB(6, 255, 255)
	end
	toggle.MouseButton1Click:Connect(function()
		state = not state;
		if state then
			game:GetService("TweenService"):Create(toggle, TweenInfo.new(0.4), {BackgroundColor3 = Color3.fromRGB(6, 255, 255)}):Play()
		else
			game:GetService("TweenService"):Create(toggle, TweenInfo.new(0.4), {BackgroundColor3 = Color3.fromRGB(30,30,30)}):Play()
		end
		spawn(function()
			pcall(function()
				func(state)
			end)
		end)
    end)
    
    return f;
end

function lib:NewSlider(section, value, default, minvalue, maxvalue, callback)
    -----UI Codes-----
    local Slider = addInstance("TextLabel", {
        Name = "Slider",
        Parent = section,
        BackgroundColor3 = Color3.fromRGB(30, 30, 30),
        BorderSizePixel = 0,
        Position = UDim2.new(0.0487179495, 0, 0.136152342, 0),
        Size = UDim2.new(0, 349, 0, 27),
        Font = Enum.Font.SourceSans,
        Text = "   "..value,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = 14.000,
        TextStrokeColor3 = Color3.fromRGB(255, 255, 255),
        TextXAlignment = Enum.TextXAlignment.Left
    });
    
    addInstance("UICorner", {
        CornerRadius = UDim.new(0,5),
        Parent = Slider
    });
    
    local SliderFrame = addInstance("Frame", {
        Name = "SliderFrame",
        Parent = Slider,
        BackgroundColor3 = Color3.fromRGB(255, 255, 255),
        Position = UDim2.new(0.451253474, 0, 0.434074104, 0),
        Size = UDim2.new(0, 180, 0, 3)
    });
    
    addInstance("UICorner", {
        CornerRadius = UDim.new(0,5),
        Parent = SliderFrame
    });
    
    local MainSlider = addInstance("TextButton", {
        Name = "MainSlider",
        Parent = Slider,
        BackgroundColor3 = Color3.fromRGB(255, 255, 255),
        Position = UDim2.new(0.451253444, 0, 0.194074199, 0),
        Size = UDim2.new(0, 15, 0, 15)
    });
    
    addInstance("UICorner", {
        CornerRadius = UDim.new(0,5),
        Parent = MainSlider
    });
    
    local TextLable = addInstance("TextLabel", {
        Parent = Slider,
        BackgroundColor3 = Color3.fromRGB(255, 255, 255),
        BackgroundTransparency = 1.000,
        Position = UDim2.new(0.364902496, 0, 0.234074071, 0),
        Size = UDim2.new(0, 25, 0, 12),
        Font = Enum.Font.SourceSans,
        Text = "10000",
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = 14.000
    });
    
    -----Values-----
    minvalue = minvalue or 0
    maxvalue = maxvalue or 100
    
    
    -----Callback-----
    callback = callback or function() end
    
    
    -----Variables-----
    local mouse = game.Players.LocalPlayer:GetMouse()
    local uis = game:GetService("UserInputService")
    local Value;
    
    
    ----- Default Set-----
    
    MainSlider.Position = UDim2.new((default - min)/(max - min), 0, 0.5, 0)
    
    -----Main Code-----
    
    MainSlider.MouseButton1Down:Connect(function()
        Value = math.floor((((tonumber(maxvalue) - tonumber(minvalue)) / 318) * SliderFrame.AbsoluteSize.X) + tonumber(minvalue)) or 0
        pcall(function()
            callback(Value)
        end)
        SliderFrame.Size = UDim2.new(0, math.clamp(mouse.X - SliderFrame.AbsolutePosition.X, 0, 318), 0, 16)
        moveconnection = mouse.Move:Connect(function()
            TextLable.Text = Value
            Value = math.floor((((tonumber(maxvalue) - tonumber(minvalue)) / 318) * SliderFrame.AbsoluteSize.X) + tonumber(minvalue))
            pcall(function()
                callback(Value)
            end)
            SliderFrame.Size = UDim2.new(0, math.clamp(mouse.X - SliderFrame.AbsolutePosition.X, 0, 318), 0, 16)
        end)
        releaseconnection = uis.InputEnded:Connect(function(Mouse)
            if Mouse.UserInputType == Enum.UserInputType.MouseButton1 then
                Value = math.floor((((tonumber(maxvalue) - tonumber(minvalue)) / 318) * SliderFrame.AbsoluteSize.X) + tonumber(minvalue))
                pcall(function()
                    callback(Value)
                end)
                SliderFrame.Size = UDim2.new(0, math.clamp(mouse.X - SliderFrame.AbsolutePosition.X, 0, 318), 0, 16)
                moveconnection:Disconnect()
                releaseconnection:Disconnect()
            end
        end)
    end)
    end

----------------------------------------------------------------
-- Return Lib

return lib;
